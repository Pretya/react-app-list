const list = [
    {
      id: 1,
      question: 'Объясните делегирование событий.',
      state: true,
    }, 
    {
      id:  2, 
      question: 'Объясните, как this работает в JavaScript.Можете ли вы привести пример одного из способов, которым работа с этим изменилась в ES6',
      state: true,
    },
    {
      id:  3, 
      question: 'Объясните, как работает прототипное наследование.',
      state: false,
    }, 
    {
      id:  4, 
      question: 'В чем разница между переменной, которая является нулевой, неопределенной или необъявленной? Как бы вы проверили любое из этих состояний?',
      state: true,
    }, 
    {
      id:  5, 
      question: 'Что такое замыкание и как/почему вы его используете?',
      state: true,
    },
    {
      id:  6, 
      question: 'Какие языковые конструкции вы используете для перебора свойств объекта и элементов массива?',
      state: false,
    },
    {
      id:  7, 
      question: 'Можете ли вы описать основную разницу между циклом Array.forEach() и методами Array.map() и почему вы должны выбрать один, а не другой?',
      state: false,
    },
    {
      id:  8, 
      question: 'Каков типичный вариант использования анонимных функций?',
      state: false,
    },
    {
      id:  9, 
      question: 'В чем разница между хост-объектами и собственными объектами?',
      state: false,
    },
    {
      id:  10, 
      question: 'Объясните разницу между: function Person(){}, var person = Person() и var person = new Person()?',
      state: false,
    },
    {
      id:  11, 
      question: 'Объясните разницу в использовании foo между function foo() {} и var foo = function() {}',
      state: false,
    },
    {
      id:  12, 
      question: 'Можете ли вы объяснить, что делают Function.call и Function.apply? В чем заметная разница между ними?',
      state: false,
    },
    {
      id:  13,
      question: 'Объясните Function.prototype.bind.',
      state: false,
    },
    {
      id:  14, 
      question: 'В чем разница между обнаружением функций, выводом функций и использованием строки UA?',
      state: false,
    },
    {
      id:  15, 
      question: 'Объясните "hoisting".',
      state: false,
    },
    {
      id:  16, 
      question: 'Опишите всплытие событий.',
      state: false,
    },
    {
      id:  17, 
      question: 'Опишите захват событий.',
      state: false,
    },
    {
      id:  18, 
      question: 'В чем разница между «атрибутом» и «свойством»?',
      state: true,
    },
    {
      id:  19,
      question: 'Каковы плюсы и минусы расширения встроенных объектов JavaScript?',
      state: false,
    },
    {
      id:  20, 
      question: 'В чем разница между == и ===?',
      state: true,
    },
    {
      id:  21, 
      question: 'Объясните политику того же происхождения в отношении JavaScript.',
      state: false,
    },
    {
      id:  22, 
      question: 'Почему он называется Тернарным оператором, что означает слово «Тернарный»?',
      state: true,
    },
    {
      id:  23, 
      question: 'Что такое строгий режим? Каковы некоторые преимущества / недостатки его использования?',
      state: false,
    },
    {
      id:  24, 
      question: 'Каковы некоторые преимущества/недостатки написания кода JavaScript на языке, который компилируется в JavaScript?',
      state: false,
    },
    {
      id:  25, 
      question: 'Какие инструменты и методы вы используете для отладки кода JavaScript?',
      state: false,
    },
    {
      id:  26, 
      question: 'Объясните разницу между изменяемым и неизменяемым объектом.Что является примером неизменяемого объекта в JavaScript? Каковы плюсы и минусы неизменности? Как добиться неизменности в собственном коде?',
      state: false,
    },
    {
      id:  27, 
      question: 'Объясните разницу между синхронными и асинхронными функциями.',
      state: true,
    },
    {
      id:  28, 
      question: 'Что такое цикл событий? В чем разница между стеком вызовов и очередью задач?',
      state: false,
    },
    {
      id:  29, 
      question: 'В чем разница между переменными, созданными с помощью let, var или const?',
      state: true,
    },
    {
      id: 30,  
      question: 'В чем разница между классом ES6 и конструкторами функций ES5?',
      state: false,
    },
    {
      id: 31, 
      question: 'Можете ли вы предложить вариант использования нового синтаксиса функции стрелка =>? Чем этот новый синтаксис отличается от других функций?',
      state: false,
    },
    {
      id: 32,  
      question: 'В чем преимущество использования синтаксиса стрелки для метода в конструкторе?',
      state: false,
    },
    {
      id: 33, 
      question: 'Как определяется функция высшего порядка?',
      state: false,
    },
    {
      id:  34, 
      question: 'Можете ли вы привести пример деструктуризации объекта или массива?',
      state: false,
    },
    {
      id: 35,
      question: 'Можете ли вы привести пример создания строки с помощью шаблонных литералов ES6?',
      state: false,
    },
    {
      id: 36, 
      question: 'Можете ли вы привести пример функции карри и почему этот синтаксис дает преимущество?',
      state: false,
    },
    {
      id:  37, 
      question: 'Каковы преимущества использования синтаксиса распространения и чем он отличается от синтаксиса остальных?',
      state: false,
    },
    {
      id:  38, 
      question: 'Как вы можете разделить код между файлами?',
      state: false,
    },
    {
      id:  39, 
      question: 'Почему вы можете захотеть создать статические члены класса?',
      state: false,
    },
    {
      id:  40, 
      question: 'В чем разница между циклами while и do-while в JavaScript?',
      state: false,
    },
    {
      id:  41, 
      question: 'Что такое promise? Где и как вы бы использовали promise?',
      state: false,
    },
    {
      id:  42,
      question: 'Обсудите, как вы можете использовать принципы объектно-ориентированного программирования при кодировании с помощью JavaScript.',
      state: false,
    },
  ];

export default list